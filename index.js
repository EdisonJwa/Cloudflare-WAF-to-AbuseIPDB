const fetch = require('node-fetch');
const FormData = require('form-data');

const { env } = process;

const cfApiKey = env.CF_API_KEY;
const cfZoneId = env.CF_ZONE_ID;
const abipdbKey = env.ABUSEIPDB_KEY;
const limit = env.CF_EVENTS_LIMIT;

let data = [];
let stat = 0;

function sortIP(data) {
    const input_ips = [];

    for (const { ip } of data) {
        input_ips.push(ip);
    }

    const result = [...new Set(input_ips)];

    return result;
}

function reportToAbuseIPDB(iplist) {
    function report(ip) {
        const form = new FormData();

        form.append('ip', ip);
        form.append('comment', 'The IP has triggered Cloudflare WAF. Report generated by Cloudflare-WAF-to-AbuseIPDB (https://github.com/SukkaW/Cloudflare-WAF-to-AbuseIPDB)');
        form.append('categories', '9,13,14,15,16,19,20,21');

        fetch('https://api.abuseipdb.com/api/v2/report', {
            method: 'post',
            body: form,
            headers: { 'Key': abipdbKey, 'Accept': 'application/json', ...form.getHeaders() }
        })
            .then(res => res.json())
            .then(({ data }) => { console.log(`${data.ipAddress} has abuse confidence score of ${data.abuseConfidenceScore}`); })
            .catch((err) => { console.error('The IP has already been reported or AbuseIPDB\'s Rate Limit has been met'); });
    }

    for (const ip of iplist) {
        report(ip);
    }
}

(function queryCfWAF(cfApiKey, cfZoneId, cursor) {
    if (stat === 0) console.log(`Querying Firewall Events from Cloudflare API V4...\n`);

    cursor = !cursor ? '' : `cursor=${cursor}`;
    fetch(`https://api.cloudflare.com/client/v4/zones/${cfZoneId}/security/events?limit=1000`, {
        headers: {
            'Authorization': `Bearer ${cfApiKey}`,
            'Content-Type': 'application/json'
        }
    }).then(res => res.json()).then(({ result, result_info }) => {
        data = [...data, ...result];
        stat = data.length;
        return result_info;
    }).then(({ cursors }) => {
        if (stat > limit || cursors.before === cursors.after) {
            // To the End
            const iplist = sortIP(data);
            console.log(`----------------------------------------\n${iplist.length} IPs has been quried from Cloudflare API. Reporting to AbuseIPDB...`)
            reportToAbuseIPDB(iplist);
        } else {
            console.log(`${stat} events already queried from Cloudflare API.`)
            queryCfWAF(cfApiKey, cfZoneId, cursors.after);
        }
    });
})(cfApiKey, cfZoneId);

